<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>끄적임</title><subtitle>cheonkyu</subtitle> <updated>2022-06-13T20:47:44+09:00</updated> <author> <name>cheonkyu</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="kr" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 cheonkyu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>M1 맥에서 x8664 도커 이미지 빌드 설정하기</title><link href="/posts/M1-%EB%A7%A5%EC%97%90%EC%84%9C-x8664-%EB%8F%84%EC%BB%A4-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B9%8C%EB%93%9C-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="M1 맥에서 x8664 도커 이미지 빌드 설정하기" /><published>2022-06-12T12:10:00+09:00</published> <updated>2022-06-13T20:47:21+09:00</updated> <id>/posts/M1-%EB%A7%A5%EC%97%90%EC%84%9C-x8664-%EB%8F%84%EC%BB%A4-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B9%8C%EB%93%9C-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</id> <content src="/posts/M1-%EB%A7%A5%EC%97%90%EC%84%9C-x8664-%EB%8F%84%EC%BB%A4-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B9%8C%EB%93%9C-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/" /> <author> <name>cheonkyu</name> </author> <category term="Docker" /> <summary> docker 빌드 시에 platform을 명시해주는 방법 docker build -t my-ubuntu:x86_64 --platform linux/amd64 . docker run -it --rm my-ubuntu:x86_64 uname -m docker-compose 으로 실행 시, services: web: build: . command: uname -m platform: linux/amd64 https://velog.io/@m0ai/M1-맥에서-x8664-도커-이미지-빌드-설정하기 </summary> </entry> <entry><title>M1 맥에서 x8664 도커 이미지 빌드 설정하기</title><link href="/posts/Docker-CheatSheet/" rel="alternate" type="text/html" title="M1 맥에서 x8664 도커 이미지 빌드 설정하기" /><published>2022-06-12T12:10:00+09:00</published> <updated>2022-06-12T12:10:00+09:00</updated> <id>/posts/Docker-CheatSheet/</id> <content src="/posts/Docker-CheatSheet/" /> <author> <name>cheonkyu</name> </author> <category term="Docker" /> <summary> # docker-compose.yml version: '2' services: web: build: # build from Dockerfile context: ./Path dockerfile: Dockerfile ports: - "5000:5000" volumes: - .:/code redis: image: redis </summary> </entry> <entry><title>도메인주도설계</title><link href="/posts/%EB%8F%84%EB%A9%94%EC%9D%B8%EC%A3%BC%EB%8F%84%EC%84%A4%EA%B3%84/" rel="alternate" type="text/html" title="도메인주도설계" /><published>2022-05-21T12:10:00+09:00</published> <updated>2022-05-21T12:10:00+09:00</updated> <id>/posts/%EB%8F%84%EB%A9%94%EC%9D%B8%EC%A3%BC%EB%8F%84%EC%84%A4%EA%B3%84/</id> <content src="/posts/%EB%8F%84%EB%A9%94%EC%9D%B8%EC%A3%BC%EB%8F%84%EC%84%A4%EA%B3%84/" /> <author> <name>cheonkyu</name> </author> <category term="설계" /> <summary> 도메인주도설계 &amp;lt;/div&amp;gt; </summary> </entry> <entry><title>Github Action</title><link href="/posts/GithubAction/" rel="alternate" type="text/html" title="Github Action" /><published>2022-03-26T12:10:00+09:00</published> <updated>2022-03-26T12:10:00+09:00</updated> <id>/posts/GithubAction/</id> <content src="/posts/GithubAction/" /> <author> <name>cheonkyu</name> </author> <category term="CI/CD" /> <category term="GithubAction" /> <summary> githubaction </summary> </entry> <entry><title>Rust</title><link href="/posts/Rust/" rel="alternate" type="text/html" title="Rust" /><published>2022-01-19T12:10:00+09:00</published> <updated>2022-01-19T12:10:00+09:00</updated> <id>/posts/Rust/</id> <content src="/posts/Rust/" /> <author> <name>cheonkyu</name> </author> <category term="프로그래밍" /> <category term="Rust" /> <summary> Rust </summary> </entry> </feed>
